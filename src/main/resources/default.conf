ds{
  cluster{
    masters = ["192.168.1.1:3000"]
  }
  hostname = "127.0.0.1"
  home = ""
  log.daemon.dir="logs"
  log.application.dir = "logs"
}
ds-master{
  akka.cluster.roles = ["master"]
  tcpServer{
    listenPort = 9999
  }
}
ds-worker{
  akka.cluster.roles = ["worker"]
}
ds-ui{

}
ds-linux{
  akka.scheduler.tick-duration = 1
}
akka{
  actor{
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  loglevel = "INFO"
  ##  loggers = ["akka.event.slf4j.Slf4jLogger"]
  ##  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = off
  log-dead-letters-during-shutdown = off
  cluster {
    seed-nodes = [
      "akka.tcp://ds@192.168.1.1:3000"
    ]
    role {
      master.min-nr-of-members = 1
      worker.min-nr-of-members = 0
    }
    auto-down-unreachable-after = 5s
    metrics.enabled = off
    sharding {
      state-store-mode = "ddata"
      remember-entities = on
    }
  }
  remote{
    log-remote-lifecycle-events = off
    netty.tcp{
      hostname = "127.0.0.1"
      port = 0
    }
    watch-failure-detector.threshold = 9.0
  }
  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb-shared"
      leveldb-shared.store {
        # DO NOT USE 'native = off' IN PRODUCTION !!!
        native = off
        dir = "target/shared-journal"
      }
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/snapshots"
    }
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    snapshot-store.local.dir = "target/snapshots"
  }

  scheduler.shutdown-timeout = 300s

}